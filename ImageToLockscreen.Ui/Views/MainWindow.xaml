<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ImageToLockscreen.Ui.Views" 
        xmlns:control="clr-namespace:ImageToLockscreen.Ui.Controls"
        xmlns:Converters="clr-namespace:ImageToLockscreen.Ui.Converters"
        xmlns:vm="clr-namespace:ImageToLockscreen.Ui.ViewModels"
        mc:Ignorable="d" x:Class="ImageToLockscreen.Ui.Views.MainWindow"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors" d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
        Title="Image To Lockscreen" Width="800" SizeToContent="Height" Foreground="AliceBlue">
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <SolidColorBrush x:Key="foreground" Color="White" />
        <SolidColorBrush x:Key="fadedForeground" Color="#f1f1f1" Opacity="0.5" />
        <SolidColorBrush x:Key="backgroundLight" Color="#FF4A4A4A" />
        <SolidColorBrush x:Key="backgroundMed" Color="#FF353535" />
        <SolidColorBrush x:Key="backgroundDark" Color="Indigo" />

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Converters:TextInputToVisibilityConverter x:Key="TextInputToVisibilityConverter" />
        <Converters:BoolToVisibilityConverter x:Key="OutputImageOptionsConverter" />

        <Style x:Key="EntryFieldStyle" TargetType="{x:Type Grid}" >
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="20,0" />
        </Style>

        <vm:DisplayWithValue x:Key="displayWithValue"></vm:DisplayWithValue>
    </Window.Resources>

    <Grid Background="{Binding Source={StaticResource backgroundMed}}" Margin="0,0,0,4" Name="main" ShowGridLines="False">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <control:Card Margin="5,20,5,0" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Top" Height="Auto" HorizontalAlignment="Stretch" Title="Image Directories" 
                       TitleForeground="{Binding Source={StaticResource foreground}}" Icon="/Images/FolderOpenedWhite128.png" FontSize="15">
            <DockPanel LastChildFill="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <StackPanel DockPanel.Dock="Top" HorizontalAlignment="Stretch">
                    <control:DirectoryPathControl Hint="Browse or type input directory path" FolderDialogTitle="Select input directory" Margin="20,10,20,0" 
                        HorizontalAlignment="Stretch"
                        Foreground="{Binding Source={StaticResource foreground}}"
                        Background="{Binding Source={StaticResource backgroundMed}}" 
                        HintColor="{Binding Source={StaticResource fadedForeground}}" Height="25" Value="{Binding Path=InputDirectory, Mode=TwoWay}"/>
                    <control:DirectoryPathControl Hint="Browse or type ouput directory path" FolderDialogTitle="Select output directory" Margin="20,10,20,10" 
                        HorizontalAlignment="Stretch"
                        Foreground="{Binding Source={StaticResource foreground}}"
                        Background="{Binding Source={StaticResource backgroundMed}}" 
                        HintColor="{Binding Source={StaticResource fadedForeground}}" Height="25" Value="{Binding Path=OutputDirectory, Mode=TwoWay}"/>
                </StackPanel>
            </DockPanel>
        </control:Card>
        <control:Card Margin="5,20,5,0" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Top" Height="Auto" HorizontalAlignment="Stretch" Title="Image Output Options" 
               TitleForeground="{Binding Source={StaticResource foreground}}" Icon="/Images/SettingsFileWhite128.png" FontSize="15" 
                       x:Name="imageOutputOptionsCard" DataContext="{Binding}">
            <DockPanel LastChildFill="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <GroupBox Header=" Background Fill " Foreground="{Binding Source={StaticResource foreground}}" 
                              Grid.Column="0" Grid.Row="0">
                        <DockPanel LastChildFill="True" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                            <StackPanel DockPanel.Dock="Top" HorizontalAlignment="Stretch" Orientation="Horizontal">
                                <RadioButton GroupName="outputOptions" Content="Solid Color" Foreground="{Binding Source={StaticResource foreground}}" Margin="20,10,0,10" 
                                             Name="backgroundFillSolidColorOption" IsChecked="{Binding IsBackgroundFillSolidColor}"/>
                                <RadioButton GroupName="outputOptions" Content="Image" Foreground="{Binding Source={StaticResource foreground}}" Margin="20,10,0,10" 
                                             Name="backgroundFillImageOption"/>
                            </StackPanel>
                            <Grid DockPanel.Dock="Top" UseLayoutRounding="True">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Name="backgroundFillImageOptionsGrid" 
                                      Visibility="{Binding IsChecked, ElementName=backgroundFillImageOption, Converter={StaticResource OutputImageOptionsConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <ComboBox SelectedIndex="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Grid.Column="0" Grid.Row="0"
                                              Name="backgroundFillImageOptionSource" IsEditable="True" IsReadOnly="True" MinWidth="185" 
                                              MaxWidth="{Binding Width, ElementName=backgroundFillImageOptionsGrid}" ItemsSource="{Binding BackgroundFillImageOptions}"
                                              DisplayMemberPath="Display" SelectedValuePath="Value" SelectedItem="{Binding Path=SelectedBackgroundFillOption, Mode=TwoWay}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding BackgroundFillImageOptionSelectionChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <ComboBox.Style>
                                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                                <Setter Property="ItemsSource" Value="{Binding Path=BackgroundFillImageOptions, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                                                <Setter Property="ItemContainerStyle">
                                                    <Setter.Value>
                                                        <Style TargetType="ComboBoxItem" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.Style>
                                    </ComboBox>

                                    <CheckBox Content="Blur" x:Name="blurImageOption" Grid.Column="1" Grid.Row="0" Background="{x:Null}" Foreground="White" 
                                              Margin="20,0,0,0" FontSize="20" VerticalAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding IsBlurBackgroundImage}"/>
                                </Grid>
                                <control:ColorPicker Width="231" FontSize="25" Foreground="{Binding Source={StaticResource foreground}}" SelectedColor="{Binding BackgroundFillColor}"
                                                     Visibility="{Binding IsChecked, ElementName=backgroundFillSolidColorOption, Converter={StaticResource OutputImageOptionsConverter}}" 
                                                     VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Grid>
                        </DockPanel>
                    </GroupBox>
                    <GroupBox Header=" Aspect Ratio " Foreground="{Binding Source={StaticResource foreground}}" x:Name="aspectRatioGroup"
                              Grid.Column="0" Grid.Row="1" Margin="0,20,0,0" >
                        <control:SlideViewer HorizontalContentAlignment="Center" VerticalContentAlignment="Center" x:Name="aspectRatioSlide" Background="{Binding Source={StaticResource backgroundMed}}" 
                                         Width="{Binding Width, ElementName=aspectRatioGroup}" Foreground="{StaticResource foreground}" Items="{Binding SlideViewerItems}" SelectedItem="{Binding SelectedAspectRatio}"/>
                    </GroupBox>
                </Grid>
            </DockPanel>
        </control:Card>
        <StackPanel Margin="5,20,14,20" Grid.Row="2" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
            <Button Content="Convert" Command="{Binding ConvertImagesCommand}" FontSize="15" Foreground="{Binding Source={StaticResource foreground}}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="BorderBrush" Value="{Binding Source={StaticResource fadedForeground}}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" Padding="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{Binding Source={StaticResource foreground}}"/>
                                <Setter Property="Background" Value="#19FFFFFF"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
        <StackPanel Grid.Row="2" Grid.Column="0" VerticalAlignment="Center">
            <ProgressBar Height="20" />
        </StackPanel>
    </Grid>
</Window>
